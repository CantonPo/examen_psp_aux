name: Llamada a la API de IP

on:
  schedule:
    - cron: '*/10 * * * *'  # Se ejecuta cada 10 minutos
  workflow_dispatch:  # Permite ejecutar el workflow manualmente desde la interfaz de GitHub

jobs:
  call_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Llamar a la API de RapidAPI
        run: |
          # Reemplaza {ip_address} con la IP que quieras consultar
          IP_ADDRESS="8.8.8.8"  # Puedes cambiar esta IP a la que desees consultar
          
          # Realizamos la llamada a la API utilizando curl
          echo "Llamando a la API para la IP $IP_ADDRESS"
          RESPONSE=$(curl -s --request GET \
            --url "https://ip-ip-fan-xiang-cha-xun.p.rapidapi.com/${IP_ADDRESS}/json" \
            --header "x-rapidapi-host: ip-ip-Fan-Xiang-Cha-Xun.p.rapidapi.com" \
            --header "x-rapidapi-key: ${{ secrets.RAPIDAPI_KEY }}")

          # Imprimimos la respuesta de la API para ver si fue exitosa
          echo "Respuesta de la API: $RESPONSE"

          # Si la respuesta no está vacía, guardamos la respuesta en un archivo
          if [ -n "$RESPONSE" ]; then
            TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
            echo "$RESPONSE" > "api_response_${TIMESTAMP}.json"
            echo "Archivo guardado como api_response_${TIMESTAMP}.json"
          else
            echo "No se recibió respuesta válida de la API"
            exit 1
          fi

      - name: Verificar si el archivo fue creado
        run: |
          # Verificamos si el archivo fue creado correctamente
          TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
          if [ -f "api_response_${TIMESTAMP}.json" ]; then
            echo "El archivo fue creado correctamente."
          else
            echo "El archivo no se ha creado."
            exit 1
          fi

      - name: Subir archivo al repositorio
        run: |
          # Verificamos si el archivo existe antes de intentar agregarlo
          TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
          if [ -f "api_response_${TIMESTAMP}.json" ]; then
            git config --global user.email "action@github.com"
            git config --global user.name "GitHub Action"
            git add "api_response_${TIMESTAMP}.json"
            git commit -m "Nuevo archivo de respuesta de la API"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main
          else
            echo "No se encontró el archivo para subir"
            exit 1
          fi


